generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Reader {
  id          Int      @id @default(autoincrement())
  firstName   String
  middleName  String?
  lastName    String
  email       String   @unique
  password    String
  gender      String
  reports     Report[]
  phoneNumber String   @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("readers")
}

model Librarian {
  id          Int      @id @default(autoincrement())
  firstName   String
  middleName  String?
  lastName    String
  email       String   @unique
  password    String
  gender      String
  reports     Report[]
  phoneNumber String   @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("librarians")
}

model Book {
  id              Int      @id @default(autoincrement())
  price           Int
  title           String   @unique
  publisher       String
  authors         String[]
  categories      String[]
  reports         Report[]
  count           Int      @default(1)
  publicationDate DateTime
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@map("books")
}

model Report {
  id           Int        @id @default(autoincrement())
  readerId     Int
  reader       Reader     @relation(fields: [readerId], references: [id])
  approverId   Int?
  librarian    Librarian? @relation(fields: [approverId], references: [id])
  bookId       Int
  book         Book       @relation(fields: [bookId], references: [id])
  dueDate      DateTime
  returnedDate DateTime?
  borrowedDate DateTime   @default(now())
  hasReturned  Boolean    @default(false)
  hasApproved  Boolean    @default(false)

  @@map("reports")
}
